<!DOCTYPE html>
<html lang="pt-BR" class="h-full">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gerenciador de Ateli√™ Criativo</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            box-sizing: border-box;
        }
        .tab-content {
            display: none;
        }
        .tab-content.active {
            display: block;
        }
        .priority-high { border-left: 4px solid #ef4444; }
        .priority-medium { border-left: 4px solid #f59e0b; }
        .priority-low { border-left: 4px solid #10b981; }
    </style>
</head>
<body class="h-full bg-gradient-to-br from-purple-50 to-pink-50 font-sans">
    <div class="min-h-full p-6">
        <header class="text-center mb-8">
            <h1 class="text-4xl font-bold text-gray-800 mb-2">üé® Insta das Bruzinhas</h1>
            <p class="text-gray-600">Organize seus projetos e inspire sua criatividade</p>
        </header>

        <!-- Navega√ß√£o por Abas -->
        <nav class="flex justify-center mb-8">
            <div class="bg-white rounded-lg shadow-lg p-1 flex space-x-1">
                <button onclick="switchTab('pedidos')" id="tab-pedidos" class="tab-btn px-6 py-3 rounded-md font-medium transition-all bg-purple-500 text-white">
                    üìã Pedidos
                </button>
                <button onclick="switchTab('produtos')" id="tab-produtos" class="tab-btn px-6 py-3 rounded-md font-medium transition-all text-gray-600 hover:bg-gray-100">
                    üõçÔ∏è Produtos
                </button>
                <button onclick="switchTab('clientes')" id="tab-clientes" class="tab-btn px-6 py-3 rounded-md font-medium transition-all text-gray-600 hover:bg-gray-100">
                    üë• Clientes
                </button>
                <button onclick="switchTab('financeiro')" id="tab-financeiro" class="tab-btn px-6 py-3 rounded-md font-medium transition-all text-gray-600 hover:bg-gray-100">
                    üí∞ Financeiro
                </button>
            </div>
        </nav>

        <!-- Aba Pedidos -->
        <div id="content-pedidos" class="tab-content active">
            <div class="max-w-6xl mx-auto">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-2xl font-bold text-gray-800">Pedidos Ativos</h2>
                    <button onclick="toggleOrderForm()" class="bg-purple-500 hover:bg-purple-600 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        + Novo Pedido
                    </button>
                </div>

                <!-- Formul√°rio de Pedido -->
                <div id="order-form" class="bg-white rounded-lg shadow-lg p-6 mb-6 hidden">
                    <h3 class="text-lg font-semibold text-gray-800 mb-4">Criar Novo Pedido</h3>
                    <form onsubmit="saveOrder(event)" class="space-y-4">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label for="order-name" class="block text-sm font-medium text-gray-700 mb-1">Nome do Pedido</label>
                                <input type="text" id="order-name" name="name" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                            </div>
                            <div>
                                <label for="order-client" class="block text-sm font-medium text-gray-700 mb-1">Cliente</label>
                                <select id="order-client" name="client" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                                    <option value="">Selecione um cliente</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label for="order-deadline" class="block text-sm font-medium text-gray-700 mb-1">Prazo de Entrega</label>
                                <input type="date" id="order-deadline" name="deadline" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                            </div>
                            <div>
                                <label for="order-priority" class="block text-sm font-medium text-gray-700 mb-1">Prioridade</label>
                                <select id="order-priority" name="priority" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                                    <option value="low">Baixa</option>
                                    <option value="medium" selected>M√©dia</option>
                                    <option value="high">Alta</option>
                                </select>
                            </div>
                        </div>

                        <!-- Produtos do Pedido -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Produtos do Pedido</label>
                            <div id="order-products" class="space-y-2">
                                <div class="flex gap-2 items-end">
                                    <div class="flex-1">
                                        <select id="product-select" class="w-full px-4 py-3 text-lg border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                                            <option value="">Selecione um produto</option>
                                        </select>
                                    </div>
                                    <div class="w-24">
                                        <input type="number" id="product-quantity" placeholder="Qtd" min="1" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                                    </div>
                                    <div class="w-32">
                                        <select id="price-type" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                                            <option value="varejo">Varejo</option>
                                            <option value="atacado">Atacado</option>
                                        </select>
                                    </div>
                                    <button type="button" onclick="addProductToOrder()" class="bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded-md font-medium transition-colors">
                                        ‚ûï Adicionar
                                    </button>
                                </div>
                            </div>
                            <div id="selected-products" class="mt-4 space-y-2">
                                <!-- Produtos selecionados aparecer√£o aqui -->
                            </div>
                        </div>

                        <!-- Informa√ß√µes de Pagamento -->
                        <div class="border-t pt-4">
                            <h4 class="text-md font-semibold text-gray-800 mb-3">Informa√ß√µes de Pagamento</h4>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div>
                                    <label for="payment-method" class="block text-sm font-medium text-gray-700 mb-1">Forma de Pagamento</label>
                                    <select id="payment-method" name="paymentMethod" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                                        <option value="">Selecione</option>
                                        <option value="PIX">PIX</option>
                                        <option value="Dinheiro">Dinheiro</option>
                                        <option value="Cart√£o">Cart√£o</option>
                                    </select>
                                </div>
                                <div>
                                    <label for="payment-type" class="block text-sm font-medium text-gray-700 mb-1">Tipo de Pagamento</label>
                                    <select id="payment-type" name="paymentType" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                                        <option value="Sinal">Sinal</option>
                                        <option value="Pagamento Total">Pagamento Total</option>
                                    </select>
                                </div>
                            </div>
                            <div class="mt-3">
                                <label for="payment-amount" class="block text-sm font-medium text-gray-700 mb-1">Valor do Pagamento (R$)</label>
                                <input type="number" id="payment-amount" name="paymentAmount" step="0.01" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                            </div>
                        </div>

                        <!-- Informa√ß√µes de Entrega -->
                        <div class="border-t pt-4">
                            <h4 class="text-md font-semibold text-gray-800 mb-3">Informa√ß√µes de Entrega</h4>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div>
                                    <label for="delivery-method" class="block text-sm font-medium text-gray-700 mb-1">Forma de Entrega</label>
                                    <select id="delivery-method" name="deliveryMethod" onchange="toggleDeliveryFee()" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                                        <option value="">Selecione</option>
                                        <option value="Retirada">Retirada no Local</option>
                                        <option value="Delivery">Delivery</option>
                                        <option value="Correios">Envio pelos Correios</option>
                                    </select>
                                </div>
                                <div id="delivery-fee-container" class="hidden">
                                    <label for="delivery-fee" class="block text-sm font-medium text-gray-700 mb-1">Taxa de Entrega (R$)</label>
                                    <input type="number" id="delivery-fee" name="deliveryFee" step="0.01" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                                </div>
                            </div>
                        </div>
                        
                        <div class="flex space-x-3">
                            <button type="submit" class="bg-purple-500 hover:bg-purple-600 text-white px-6 py-2 rounded-lg font-medium transition-colors">
                                Salvar Pedido
                            </button>
                            <button type="button" onclick="toggleOrderForm()" class="bg-gray-300 hover:bg-gray-400 text-gray-700 px-6 py-2 rounded-lg font-medium transition-colors">
                                Cancelar
                            </button>
                        </div>
                    </form>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="orders-grid">
                    <!-- Pedidos ser√£o inseridos aqui -->
                </div>
            </div>
        </div>

        <!-- Aba Produtos -->
        <div id="content-produtos" class="tab-content">
            <div class="max-w-6xl mx-auto">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-2xl font-bold text-gray-800">Cat√°logo de Produtos</h2>
                    <button onclick="toggleProductForm()" class="bg-pink-500 hover:bg-pink-600 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        + Novo Produto
                    </button>
                </div>

                <!-- Formul√°rio de Produto -->
                <div id="product-form" class="bg-white rounded-lg shadow-lg p-6 mb-6 hidden">
                    <h3 class="text-lg font-semibold text-gray-800 mb-4">Cadastrar Novo Produto</h3>
                    <form onsubmit="saveProduct(event)" class="space-y-4">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label for="product-name" class="block text-sm font-medium text-gray-700 mb-1">Nome do Produto</label>
                                <input type="text" id="product-name" name="name" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500">
                            </div>
                            <div>
                                <label for="product-unit" class="block text-sm font-medium text-gray-700 mb-1">Unidade de Medida</label>
                                <select id="product-unit" name="unit" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500">
                                    <option value="">Selecione</option>
                                    <option value="unidade">Unidade</option>
                                    <option value="par">Par</option>
                                    <option value="conjunto">Conjunto</option>
                                    <option value="metro">Metro</option>
                                    <option value="kg">Quilograma</option>
                                    <option value="litro">Litro</option>
                                    <option value="pacote">Pacote</option>
                                </select>
                            </div>
                        </div>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label for="product-price-varejo" class="block text-sm font-medium text-gray-700 mb-1">Pre√ßo Varejo (R$)</label>
                                <input type="number" id="product-price-varejo" name="priceVarejo" step="0.01" min="0" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500">
                            </div>
                            <div>
                                <label for="product-price-atacado" class="block text-sm font-medium text-gray-700 mb-1">Pre√ßo Atacado (R$)</label>
                                <input type="number" id="product-price-atacado" name="priceAtacado" step="0.01" min="0" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500">
                            </div>
                        </div>
                        
                        <div>
                            <label for="product-description" class="block text-sm font-medium text-gray-700 mb-1">Descri√ß√£o (opcional)</label>
                            <textarea id="product-description" name="description" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-pink-500"></textarea>
                        </div>
                        
                        <div class="flex space-x-3">
                            <button type="submit" class="bg-pink-500 hover:bg-pink-600 text-white px-6 py-2 rounded-lg font-medium transition-colors">
                                Salvar Produto
                            </button>
                            <button type="button" onclick="toggleProductForm()" class="bg-gray-300 hover:bg-gray-400 text-gray-700 px-6 py-2 rounded-lg font-medium transition-colors">
                                Cancelar
                            </button>
                        </div>
                    </form>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="products-grid">
                    <!-- Produtos ser√£o inseridos aqui -->
                </div>
            </div>
        </div>

        <!-- Aba Clientes -->
        <div id="content-clientes" class="tab-content">
            <div class="max-w-6xl mx-auto">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-2xl font-bold text-gray-800">Gest√£o de Clientes</h2>
                    <button onclick="toggleClientForm()" class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                        + Novo Cliente
                    </button>
                </div>

                <!-- Formul√°rio de Cliente -->
                <div id="client-form" class="bg-white rounded-lg shadow-lg p-6 mb-6 hidden">
                    <h3 class="text-lg font-semibold text-gray-800 mb-4">Adicionar Novo Cliente</h3>
                    <form onsubmit="saveClient(event)" class="space-y-4">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label for="client-name" class="block text-sm font-medium text-gray-700 mb-1">Nome Completo</label>
                                <input type="text" id="client-name" name="name" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                            </div>
                            <div>
                                <label for="client-phone" class="block text-sm font-medium text-gray-700 mb-1">Telefone</label>
                                <input type="tel" id="client-phone" name="phone" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                            </div>
                        </div>
                        
                        <div>
                            <label for="client-address" class="block text-sm font-medium text-gray-700 mb-1">Endere√ßo Completo</label>
                            <textarea id="client-address" name="address" rows="2" required class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"></textarea>
                        </div>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label for="client-birthday" class="block text-sm font-medium text-gray-700 mb-1">Data de Anivers√°rio</label>
                                <input type="date" id="client-birthday" name="birthday" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                            </div>
                            <div>
                                <label for="client-email" class="block text-sm font-medium text-gray-700 mb-1">Email (opcional)</label>
                                <input type="email" id="client-email" name="email" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
                            </div>
                        </div>
                        
                        <div>
                            <label for="client-history" class="block text-sm font-medium text-gray-700 mb-1">Hist√≥rico de Pedidos</label>
                            <textarea id="client-history" name="history" rows="3" placeholder="Descreva pedidos anteriores, prefer√™ncias, observa√ß√µes..." class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"></textarea>
                        </div>
                        
                        <div class="flex space-x-3">
                            <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded-lg font-medium transition-colors">
                                Salvar Cliente
                            </button>
                            <button type="button" onclick="toggleClientForm()" class="bg-gray-300 hover:bg-gray-400 text-gray-700 px-6 py-2 rounded-lg font-medium transition-colors">
                                Cancelar
                            </button>
                        </div>
                    </form>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="clients-grid">
                    <!-- Clientes ser√£o inseridos aqui -->
                </div>
            </div>
        </div>

        <!-- Aba Financeiro -->
        <div id="content-financeiro" class="tab-content">
            <div class="max-w-4xl mx-auto">
                <h2 class="text-2xl font-bold text-gray-800 mb-6">Controle Financeiro</h2>
                
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                    <div class="bg-green-100 p-6 rounded-lg">
                        <h3 class="text-lg font-semibold text-green-800 mb-2">Receitas</h3>
                        <p class="text-3xl font-bold text-green-600" id="total-receitas">R$ 0,00</p>
                    </div>
                    <div class="bg-red-100 p-6 rounded-lg">
                        <h3 class="text-lg font-semibold text-red-800 mb-2">Despesas</h3>
                        <p class="text-3xl font-bold text-red-600" id="total-despesas">R$ 0,00</p>
                    </div>
                    <div class="bg-blue-100 p-6 rounded-lg">
                        <h3 class="text-lg font-semibold text-blue-800 mb-2">Saldo</h3>
                        <p class="text-3xl font-bold text-blue-600" id="saldo-total">R$ 0,00</p>
                    </div>
                </div>

                <div class="flex justify-between items-center mb-4">
                    <h3 class="text-xl font-semibold text-gray-800">Transa√ß√µes</h3>
                    <div class="space-x-2">
                        <button onclick="addTransaction('receita')" class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                            + Receita
                        </button>
                        <button onclick="addTransaction('despesa')" class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg font-medium transition-colors">
                            + Despesa
                        </button>
                    </div>
                </div>

                <div class="bg-white rounded-lg shadow-lg" id="transactions-list">
                    <!-- Transa√ß√µes ser√£o inseridas aqui -->
                </div>
            </div>
        </div>
    </div>

    <script>
        // Dados do aplicativo
        let orders = [
            { 
                id: 1, 
                name: "Quadro Abstrato", 
                client: "Maria Silva", 
                orderDate: "2024-01-10",
                deadline: "2024-01-15", 
                priority: "high", 
                status: "Em andamento", 
                products: [], 
                total: 150.00,
                paymentMethod: "PIX",
                paymentType: "Sinal",
                paymentAmount: 75.00,
                deliveryMethod: "Retirada",
                deliveryFee: 0
            },
            { 
                id: 2, 
                name: "Escultura de Argila", 
                client: "Jo√£o Santos", 
                orderDate: "2024-01-12",
                deadline: "2024-01-20", 
                priority: "medium", 
                status: "Planejamento", 
                products: [], 
                total: 80.00,
                paymentMethod: "Dinheiro",
                paymentType: "Pagamento Total",
                paymentAmount: 80.00,
                deliveryMethod: "Delivery",
                deliveryFee: 15.00
            }
        ];

        let products = [
            { id: 1, name: "Quadro Personalizado 30x40", unit: "unidade", priceVarejo: 150.00, priceAtacado: 120.00, description: "Quadro personalizado em tela" },
            { id: 2, name: "Escultura Decorativa", unit: "unidade", priceVarejo: 80.00, priceAtacado: 65.00, description: "Escultura em argila pintada √† m√£o" },
            { id: 3, name: "Kit Pintura Infantil", unit: "conjunto", priceVarejo: 45.00, priceAtacado: 35.00, description: "Kit completo para pintura infantil" }
        ];

        let currentOrderProducts = [];

        let clients = [
            { 
                id: 1, 
                name: "Maria Silva", 
                email: "maria@email.com", 
                phone: "(11) 99999-9999", 
                address: "Rua das Flores, 123 - Centro - S√£o Paulo/SP",
                birthday: "1985-03-15",
                history: "Cliente fiel h√° 2 anos. Prefere tons past√©is e designs delicados. J√° encomendou 5 quadros personalizados.",
                orders: 3 
            },
            { 
                id: 2, 
                name: "Jo√£o Santos", 
                email: "joao@email.com", 
                phone: "(11) 88888-8888",
                address: "Av. Paulista, 456 - Bela Vista - S√£o Paulo/SP", 
                birthday: "1990-07-22",
                history: "Gosta de arte moderna e cores vibrantes. Primeira compra foi uma escultura abstrata.",
                orders: 1 
            }
        ];

        let transactions = [
            { id: 1, type: "receita", description: "Venda Quadro Paisagem", amount: 450.00, date: "2024-01-10" },
            { id: 2, type: "despesa", description: "Compra de Tintas", amount: 120.00, date: "2024-01-08" }
        ];

        // Fun√ß√£o para trocar abas
        function switchTab(tabName) {
            // Esconder todas as abas
            document.querySelectorAll('.tab-content').forEach(content => {
                content.classList.remove('active');
            });
            
            // Remover estilo ativo de todos os bot√µes
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.classList.remove('bg-purple-500', 'text-white');
                btn.classList.add('text-gray-600', 'hover:bg-gray-100');
            });
            
            // Mostrar aba selecionada
            document.getElementById(`content-${tabName}`).classList.add('active');
            
            // Ativar bot√£o selecionado
            const activeBtn = document.getElementById(`tab-${tabName}`);
            activeBtn.classList.add('bg-purple-500', 'text-white');
            activeBtn.classList.remove('text-gray-600', 'hover:bg-gray-100');
            
            // Renderizar conte√∫do da aba
            if (tabName === 'pedidos') renderOrders();
            if (tabName === 'produtos') renderProducts();
            if (tabName === 'clientes') renderClients();
            if (tabName === 'financeiro') renderFinancial();
        }

        // Renderizar pedidos
        function renderOrders() {
            const grid = document.getElementById('orders-grid');
            grid.innerHTML = orders.map(order => `
                <div class="bg-white rounded-lg shadow-lg p-6 priority-${order.priority}">
                    <div class="flex justify-between items-start mb-4">
                        <div>
                            <h3 class="text-lg font-semibold text-gray-800">${order.name}</h3>
                            <p class="text-xl font-bold text-purple-600 mt-1">üë§ ${order.client}</p>
                        </div>
                        <span class="px-2 py-1 text-xs rounded-full ${order.status === 'Em andamento' ? 'bg-blue-100 text-blue-800' : order.status === 'Conclu√≠do' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}">${order.status}</span>
                    </div>
                    
                    <div class="space-y-2 mb-4">
                        <p class="text-gray-600">üìÖ <strong>Pedido:</strong> ${order.orderDate ? new Date(order.orderDate).toLocaleDateString('pt-BR') : 'N√£o informado'}</p>
                        <p class="text-gray-600">üöö <strong>Entrega:</strong> ${new Date(order.deadline).toLocaleDateString('pt-BR')}</p>
                        <p class="text-gray-600">üõçÔ∏è <strong>Produtos:</strong> ${order.products.length} itens</p>
                        <p class="text-green-600 font-semibold">üí∞ <strong>Total:</strong> R$ ${order.total.toFixed(2).replace('.', ',')}</p>
                        
                        ${order.paymentMethod ? `
                            <p class="text-gray-600">üí≥ <strong>Pagamento:</strong> ${order.paymentMethod}</p>
                        ` : ''}
                        
                        ${order.paymentAmount ? `
                            <p class="text-gray-600">üíµ <strong>${order.paymentType}:</strong> R$ ${order.paymentAmount.toFixed(2).replace('.', ',')}</p>
                        ` : ''}
                        
                        ${order.deliveryMethod ? `
                            <p class="text-gray-600">üöõ <strong>Entrega:</strong> ${order.deliveryMethod}</p>
                        ` : ''}
                        
                        ${order.deliveryFee && order.deliveryFee > 0 ? `
                            <p class="text-gray-600">üì¶ <strong>Taxa:</strong> R$ ${order.deliveryFee.toFixed(2).replace('.', ',')}</p>
                        ` : ''}
                    </div>
                    
                    <div class="flex justify-center">
                        <button onclick="editOrder(${order.id})" class="w-full bg-purple-500 hover:bg-purple-600 text-white py-2 px-4 rounded text-sm transition-colors">
                            ‚úèÔ∏è Editar Pedido
                        </button>
                    </div>
                </div>
            `).join('');
        }

        // Renderizar produtos
        function renderProducts() {
            const grid = document.getElementById('products-grid');
            grid.innerHTML = products.map(product => `
                <div class="bg-white rounded-lg shadow-lg p-6">
                    <h3 class="text-lg font-semibold text-gray-800 mb-3">${product.name}</h3>
                    <p class="text-gray-600 mb-2">üì¶ Unidade: ${product.unit}</p>
                    <div class="mb-3">
                        <p class="text-green-600 font-semibold">üè™ Varejo: R$ ${product.priceVarejo.toFixed(2).replace('.', ',')}</p>
                        <p class="text-blue-600 font-semibold">üè¢ Atacado: R$ ${product.priceAtacado.toFixed(2).replace('.', ',')}</p>
                    </div>
                    ${product.description ? `
                        <div class="bg-gray-50 p-3 rounded-md mb-3">
                            <p class="text-sm text-gray-700">${product.description}</p>
                        </div>
                    ` : ''}
                    <div class="flex space-x-2">
                        <button onclick="editProduct(${product.id})" class="flex-1 bg-blue-100 hover:bg-blue-200 text-blue-700 py-2 px-3 rounded text-sm transition-colors">
                            Editar
                        </button>
                        <button onclick="deleteProduct(${product.id})" class="bg-red-100 hover:bg-red-200 text-red-700 py-2 px-3 rounded text-sm transition-colors">
                            Excluir
                        </button>
                    </div>
                </div>
            `).join('');
        }

        // Renderizar clientes
        function renderClients() {
            const grid = document.getElementById('clients-grid');
            grid.innerHTML = clients.map(client => `
                <div class="bg-white rounded-lg shadow-lg p-6">
                    <h3 class="text-lg font-semibold text-gray-800 mb-3">${client.name}</h3>
                    <p class="text-gray-600 mb-2">üì± ${client.phone}</p>
                    <p class="text-gray-600 mb-2">üìß ${client.email || 'N√£o informado'}</p>
                    <p class="text-gray-600 mb-2">üìç ${client.address}</p>
                    <p class="text-gray-600 mb-2">üéÇ ${client.birthday ? new Date(client.birthday).toLocaleDateString('pt-BR') : 'N√£o informado'}</p>
                    <p class="text-gray-600 mb-3">üé® ${client.orders} pedidos</p>
                    
                    ${client.history ? `
                        <div class="bg-gray-50 p-3 rounded-md mb-3">
                            <p class="text-sm text-gray-700"><strong>Hist√≥rico:</strong></p>
                            <p class="text-sm text-gray-600 mt-1">${client.history}</p>
                        </div>
                    ` : ''}
                    
                    <div class="flex space-x-2">
                        <button onclick="viewClient(${client.id})" class="flex-1 bg-green-100 hover:bg-green-200 text-green-700 py-2 px-3 rounded text-sm transition-colors">
                            Ver Detalhes
                        </button>
                        <button onclick="deleteClient(${client.id})" class="bg-red-100 hover:bg-red-200 text-red-700 py-2 px-3 rounded text-sm transition-colors">
                            Excluir
                        </button>
                    </div>
                </div>
            `).join('');
        }

        // Renderizar financeiro
        function renderFinancial() {
            const receitas = transactions.filter(t => t.type === 'receita').reduce((sum, t) => sum + t.amount, 0);
            const despesas = transactions.filter(t => t.type === 'despesa').reduce((sum, t) => sum + t.amount, 0);
            const saldo = receitas - despesas;

            document.getElementById('total-receitas').textContent = `R$ ${receitas.toFixed(2).replace('.', ',')}`;
            document.getElementById('total-despesas').textContent = `R$ ${despesas.toFixed(2).replace('.', ',')}`;
            document.getElementById('saldo-total').textContent = `R$ ${saldo.toFixed(2).replace('.', ',')}`;

            const list = document.getElementById('transactions-list');
            list.innerHTML = transactions.length ? transactions.map(transaction => `
                <div class="p-4 border-b border-gray-200 flex justify-between items-center">
                    <div>
                        <h4 class="font-medium text-gray-800">${transaction.description}</h4>
                        <p class="text-sm text-gray-500">${new Date(transaction.date).toLocaleDateString('pt-BR')}</p>
                    </div>
                    <div class="text-right">
                        <p class="font-semibold ${transaction.type === 'receita' ? 'text-green-600' : 'text-red-600'}">
                            ${transaction.type === 'receita' ? '+' : '-'} R$ ${transaction.amount.toFixed(2).replace('.', ',')}
                        </p>
                        <button onclick="deleteTransaction(${transaction.id})" class="text-red-500 hover:text-red-700 text-sm">
                            Excluir
                        </button>
                    </div>
                </div>
            `).join('') : '<div class="p-8 text-center text-gray-500">Nenhuma transa√ß√£o registrada</div>';
        }

        // Fun√ß√µes para pedidos
        function toggleOrderForm() {
            const form = document.getElementById('order-form');
            const isHidden = form.classList.contains('hidden');
            
            if (isHidden) {
                form.classList.remove('hidden');
                populateClientSelect();
                populateProductSelect();
                document.getElementById('order-name').focus();
            } else {
                form.classList.add('hidden');
                document.querySelector('#order-form form').reset();
                currentOrderProducts = [];
                updateSelectedProducts();
            }
        }

        function populateClientSelect() {
            const select = document.getElementById('order-client');
            select.innerHTML = '<option value="">Selecione um cliente</option>' +
                clients.map(client => `<option value="${client.name}">${client.name}</option>`).join('');
        }

        function populateProductSelect() {
            const select = document.getElementById('product-select');
            select.innerHTML = '<option value="">Selecione um produto</option>' +
                products.map(product => `<option value="${product.id}">${product.name}</option>`).join('');
        }

        function addProductToOrder() {
            const productId = parseInt(document.getElementById('product-select').value);
            const quantity = parseInt(document.getElementById('product-quantity').value);
            const priceType = document.getElementById('price-type').value;

            if (!productId || !quantity) return;

            const product = products.find(p => p.id === productId);
            if (!product) return;

            const price = priceType === 'varejo' ? product.priceVarejo : product.priceAtacado;
            const total = price * quantity;

            const orderProduct = {
                id: productId,
                name: product.name,
                quantity,
                priceType,
                unitPrice: price,
                total
            };

            currentOrderProducts.push(orderProduct);
            updateSelectedProducts();

            // Limpar campos
            document.getElementById('product-select').value = '';
            document.getElementById('product-quantity').value = '';
        }

        function updateSelectedProducts() {
            const container = document.getElementById('selected-products');
            const totalValue = currentOrderProducts.reduce((sum, item) => sum + item.total, 0);

            container.innerHTML = currentOrderProducts.map((item, index) => `
                <div class="flex justify-between items-center bg-gray-50 p-3 rounded-md">
                    <div>
                        <span class="font-medium">${item.name}</span>
                        <span class="text-gray-600 ml-2">${item.quantity}x R$ ${item.unitPrice.toFixed(2).replace('.', ',')} (${item.priceType})</span>
                    </div>
                    <div class="flex items-center space-x-2">
                        <span class="font-semibold text-green-600">R$ ${item.total.toFixed(2).replace('.', ',')}</span>
                        <button type="button" onclick="removeProductFromOrder(${index})" class="text-red-500 hover:text-red-700">
                            ‚úï
                        </button>
                    </div>
                </div>
            `).join('') + (currentOrderProducts.length > 0 ? `
                <div class="border-t pt-3 mt-3">
                    <div class="flex justify-between items-center font-bold text-lg">
                        <span>Total do Pedido:</span>
                        <span class="text-green-600">R$ ${totalValue.toFixed(2).replace('.', ',')}</span>
                    </div>
                </div>
            ` : '');
        }

        function removeProductFromOrder(index) {
            currentOrderProducts.splice(index, 1);
            updateSelectedProducts();
        }

        function toggleDeliveryFee() {
            const deliveryMethod = document.getElementById('delivery-method').value;
            const feeContainer = document.getElementById('delivery-fee-container');
            
            if (deliveryMethod === 'Delivery' || deliveryMethod === 'Correios') {
                feeContainer.classList.remove('hidden');
                if (deliveryMethod === 'Delivery') {
                    document.getElementById('delivery-fee').value = '15.00';
                } else {
                    document.getElementById('delivery-fee').value = '';
                }
            } else {
                feeContainer.classList.add('hidden');
                document.getElementById('delivery-fee').value = '0';
            }
        }

        function saveOrder(event) {
            event.preventDefault();
            
            if (currentOrderProducts.length === 0) {
                alert('Adicione pelo menos um produto ao pedido!');
                return;
            }

            const formData = new FormData(event.target);
            const total = currentOrderProducts.reduce((sum, item) => sum + item.total, 0);

            const newOrder = {
                id: Date.now(),
                name: formData.get('name'),
                client: formData.get('client'),
                orderDate: new Date().toISOString().split('T')[0],
                deadline: formData.get('deadline'),
                priority: formData.get('priority'),
                status: 'Planejamento',
                products: [...currentOrderProducts],
                total,
                paymentMethod: formData.get('paymentMethod') || '',
                paymentType: formData.get('paymentType') || '',
                paymentAmount: parseFloat(formData.get('paymentAmount')) || 0,
                deliveryMethod: formData.get('deliveryMethod') || '',
                deliveryFee: parseFloat(formData.get('deliveryFee')) || 0
            };
            
            orders.push(newOrder);
            renderOrders();
            toggleOrderForm();
        }

        // Fun√ß√µes para produtos
        function toggleProductForm() {
            const form = document.getElementById('product-form');
            const isHidden = form.classList.contains('hidden');
            
            if (isHidden) {
                form.classList.remove('hidden');
                document.getElementById('product-name').focus();
            } else {
                form.classList.add('hidden');
                document.querySelector('#product-form form').reset();
            }
        }

        function saveProduct(event) {
            event.preventDefault();
            
            const formData = new FormData(event.target);
            const newProduct = {
                id: Date.now(),
                name: formData.get('name'),
                unit: formData.get('unit'),
                priceVarejo: parseFloat(formData.get('priceVarejo')),
                priceAtacado: parseFloat(formData.get('priceAtacado')),
                description: formData.get('description') || ''
            };
            
            products.push(newProduct);
            renderProducts();
            toggleProductForm();
        }

        function toggleClientForm() {
            const form = document.getElementById('client-form');
            const isHidden = form.classList.contains('hidden');
            
            if (isHidden) {
                form.classList.remove('hidden');
                document.getElementById('client-name').focus();
            } else {
                form.classList.add('hidden');
                // Limpar formul√°rio
                document.querySelector('#client-form form').reset();
            }
        }

        function saveClient(event) {
            event.preventDefault();
            
            const formData = new FormData(event.target);
            const newClient = {
                id: Date.now(),
                name: formData.get('name'),
                phone: formData.get('phone'),
                email: formData.get('email') || '',
                address: formData.get('address'),
                birthday: formData.get('birthday') || '',
                history: formData.get('history') || '',
                orders: 0
            };
            
            clients.push(newClient);
            renderClients();
            toggleClientForm();
        }

        function viewClient(id) {
            const client = clients.find(c => c.id === id);
            if (client) {
                const details = `
Nome: ${client.name}
Telefone: ${client.phone}
Email: ${client.email || 'N√£o informado'}
Endere√ßo: ${client.address}
Anivers√°rio: ${client.birthday ? new Date(client.birthday).toLocaleDateString('pt-BR') : 'N√£o informado'}
Pedidos: ${client.orders}

Hist√≥rico de Pedidos:
${client.history || 'Nenhum hist√≥rico registrado'}
                `.trim();
                
                // Criar modal personalizado
                const modal = document.createElement('div');
                modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
                modal.innerHTML = `
                    <div class="bg-white rounded-lg p-6 max-w-md w-full mx-4">
                        <h3 class="text-lg font-semibold mb-4">Detalhes do Cliente</h3>
                        <pre class="text-sm text-gray-700 whitespace-pre-wrap mb-4">${details}</pre>
                        <button onclick="this.closest('.fixed').remove()" class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded">
                            Fechar
                        </button>
                    </div>
                `;
                document.body.appendChild(modal);
            }
        }

        function addTransaction(type) {
            const description = prompt(`Descri√ß√£o da ${type}:`);
            const amount = parseFloat(prompt('Valor:'));
            
            if (description && amount) {
                const newTransaction = {
                    id: Date.now(),
                    type,
                    description,
                    amount,
                    date: new Date().toISOString().split('T')[0]
                };
                transactions.push(newTransaction);
                renderFinancial();
            }
        }

        // Fun√ß√µes para excluir itens
        function deleteOrder(id) {
            orders = orders.filter(o => o.id !== id);
            renderOrders();
        }

        function deleteProduct(id) {
            products = products.filter(p => p.id !== id);
            renderProducts();
        }

        function deleteClient(id) {
            clients = clients.filter(c => c.id !== id);
            renderClients();
        }

        function deleteTransaction(id) {
            transactions = transactions.filter(t => t.id !== id);
            renderFinancial();
        }

        // Fun√ß√µes de edi√ß√£o (simplificadas)
        function editOrder(id) {
            const order = orders.find(o => o.id === id);
            if (!order) return;

            // Criar modal de edi√ß√£o
            const modal = document.createElement('div');
            modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4';
            modal.innerHTML = `
                <div class="bg-white rounded-lg p-6 max-w-2xl w-full max-h-full overflow-y-auto">
                    <h3 class="text-lg font-semibold mb-4">Editar Pedido: ${order.name}</h3>
                    <form onsubmit="updateOrder(event, ${order.id})" class="space-y-4">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Status do Pedido</label>
                                <select name="status" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                                    <option value="Planejamento" ${order.status === 'Planejamento' ? 'selected' : ''}>Planejamento</option>
                                    <option value="Em andamento" ${order.status === 'Em andamento' ? 'selected' : ''}>Em andamento</option>
                                    <option value="Conclu√≠do" ${order.status === 'Conclu√≠do' ? 'selected' : ''}>Conclu√≠do</option>
                                </select>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Prioridade</label>
                                <select name="priority" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                                    <option value="low" ${order.priority === 'low' ? 'selected' : ''}>Baixa</option>
                                    <option value="medium" ${order.priority === 'medium' ? 'selected' : ''}>M√©dia</option>
                                    <option value="high" ${order.priority === 'high' ? 'selected' : ''}>Alta</option>
                                </select>
                            </div>
                        </div>

                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Data de Entrega</label>
                                <input type="date" name="deadline" value="${order.deadline}" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Forma de Pagamento</label>
                                <select name="paymentMethod" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                                    <option value="">Selecione</option>
                                    <option value="PIX" ${order.paymentMethod === 'PIX' ? 'selected' : ''}>PIX</option>
                                    <option value="Dinheiro" ${order.paymentMethod === 'Dinheiro' ? 'selected' : ''}>Dinheiro</option>
                                    <option value="Cart√£o" ${order.paymentMethod === 'Cart√£o' ? 'selected' : ''}>Cart√£o</option>
                                </select>
                            </div>
                        </div>

                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Tipo de Pagamento</label>
                                <select name="paymentType" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                                    <option value="Sinal" ${order.paymentType === 'Sinal' ? 'selected' : ''}>Sinal</option>
                                    <option value="Pagamento Total" ${order.paymentType === 'Pagamento Total' ? 'selected' : ''}>Pagamento Total</option>
                                </select>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Valor do Pagamento (R$)</label>
                                <input type="number" name="paymentAmount" value="${order.paymentAmount}" step="0.01" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                            </div>
                        </div>

                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Forma de Entrega</label>
                                <select name="deliveryMethod" onchange="toggleEditDeliveryFee(this)" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                                    <option value="">Selecione</option>
                                    <option value="Retirada" ${order.deliveryMethod === 'Retirada' ? 'selected' : ''}>Retirada no Local</option>
                                    <option value="Delivery" ${order.deliveryMethod === 'Delivery' ? 'selected' : ''}>Delivery</option>
                                    <option value="Correios" ${order.deliveryMethod === 'Correios' ? 'selected' : ''}>Envio pelos Correios</option>
                                </select>
                            </div>
                            <div id="edit-delivery-fee-container" class="${order.deliveryMethod === 'Delivery' || order.deliveryMethod === 'Correios' ? '' : 'hidden'}">
                                <label class="block text-sm font-medium text-gray-700 mb-1">Taxa de Entrega (R$)</label>
                                <input type="number" name="deliveryFee" value="${order.deliveryFee}" step="0.01" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500">
                            </div>
                        </div>

                        <div class="border-t pt-4">
                            <h4 class="text-md font-semibold text-gray-800 mb-2">Produtos do Pedido</h4>
                            <div class="bg-gray-50 p-3 rounded-md">
                                ${order.products.length > 0 ? order.products.map(product => `
                                    <div class="flex justify-between items-center mb-2">
                                        <span>${product.name} (${product.quantity}x)</span>
                                        <span class="font-semibold">R$ ${product.total.toFixed(2).replace('.', ',')}</span>
                                    </div>
                                `).join('') : '<p class="text-gray-500">Nenhum produto adicionado</p>'}
                                <div class="border-t pt-2 mt-2">
                                    <div class="flex justify-between items-center font-bold">
                                        <span>Total:</span>
                                        <span class="text-green-600">R$ ${order.total.toFixed(2).replace('.', ',')}</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="flex space-x-3 pt-4">
                            <button type="submit" class="bg-purple-500 hover:bg-purple-600 text-white px-6 py-2 rounded-lg font-medium transition-colors">
                                Salvar Altera√ß√µes
                            </button>
                            <button type="button" onclick="deleteOrder(${order.id}); this.closest('.fixed').remove()" class="bg-red-500 hover:bg-red-600 text-white px-6 py-2 rounded-lg font-medium transition-colors">
                                Excluir Pedido
                            </button>
                            <button type="button" onclick="this.closest('.fixed').remove()" class="bg-gray-300 hover:bg-gray-400 text-gray-700 px-6 py-2 rounded-lg font-medium transition-colors">
                                Cancelar
                            </button>
                        </div>
                    </form>
                </div>
            `;
            document.body.appendChild(modal);
        }

        function toggleEditDeliveryFee(select) {
            const feeContainer = select.closest('form').querySelector('#edit-delivery-fee-container');
            const feeInput = feeContainer.querySelector('input[name="deliveryFee"]');
            
            if (select.value === 'Delivery' || select.value === 'Correios') {
                feeContainer.classList.remove('hidden');
                if (select.value === 'Delivery') {
                    feeInput.value = '15.00';
                }
            } else {
                feeContainer.classList.add('hidden');
                feeInput.value = '0';
            }
        }

        function updateOrder(event, orderId) {
            event.preventDefault();
            
            const formData = new FormData(event.target);
            const orderIndex = orders.findIndex(o => o.id === orderId);
            
            if (orderIndex !== -1) {
                orders[orderIndex] = {
                    ...orders[orderIndex],
                    status: formData.get('status'),
                    priority: formData.get('priority'),
                    deadline: formData.get('deadline'),
                    paymentMethod: formData.get('paymentMethod') || '',
                    paymentType: formData.get('paymentType') || '',
                    paymentAmount: parseFloat(formData.get('paymentAmount')) || 0,
                    deliveryMethod: formData.get('deliveryMethod') || '',
                    deliveryFee: parseFloat(formData.get('deliveryFee')) || 0
                };
                
                renderOrders();
                event.target.closest('.fixed').remove();
            }
        }

        function editProduct(id) {
            const product = products.find(p => p.id === id);
            const newPriceVarejo = parseFloat(prompt('Novo pre√ßo varejo:', product.priceVarejo));
            if (newPriceVarejo !== null && !isNaN(newPriceVarejo)) {
                product.priceVarejo = newPriceVarejo;
                renderProducts();
            }
        }



        // Inicializar aplica√ß√£o
        document.addEventListener('DOMContentLoaded', function() {
            renderOrders();
        });
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'99415d5eb6497263',t:'MTc2MTM5MTY0Ni4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
